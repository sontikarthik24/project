/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package controller.Doctor;

import controller.Network.ViewNetworkJPanel;
import java.awt.CardLayout;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Database;
import model.DoctorTask;

/**
 *
 * @author karthiksonti
 */
public class DoctorTaskJPanel extends javax.swing.JPanel { 
    String doctor;
    JPanel layoutContainer;
    /**
     * Creates new form DoctorTaskJPanel
     */
    public DoctorTaskJPanel(JPanel layoutContainer, String doctor) {
        initComponents();
        this.layoutContainer = layoutContainer;
        this.doctor = doctor;
        
        addDoctorTasks();
    }
    
    private ArrayList<DoctorTask> doctorTaskList() {
        ArrayList<DoctorTask> doctorTaskList = new ArrayList<>();
        
        Database db = new Database();
        
        try {
            Connection conn = db.connect();
            String sql = "select * from doctortask where doctor=?";
            PreparedStatement statement = conn.prepareStatement(sql);
            statement.setString(1, doctor);
            ResultSet a = statement.executeQuery();
            DoctorTask d;
            while(a.next()) {
                doctorTaskList.add(new DoctorTask(a.getString("bookingid"), a.getString("patient"), a.getString("reason")));
            }
            
            db.disconnect();
        } catch (Exception ex) {
            Logger.getLogger(ViewNetworkJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return doctorTaskList;
    }
    
    private void addDoctorTasks(){
        ArrayList<DoctorTask> hospitalList = doctorTaskList();
        DefaultTableModel model = (DefaultTableModel) doctorTask.getModel();
        model.setRowCount(0);
        for(DoctorTask d: doctorTaskList()){
            Object[] row = new Object[3];
            
            row[0] = d.getBookingId();
            row[1] = d.getPatient();
            row[2] = d.getReason();

            
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        doctorTask = new javax.swing.JTable();
        BackButton = new javax.swing.JButton();
        addNotes = new javax.swing.JButton();
        viewPatientHistory = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 153, 153));

        doctorTask.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Booking Id", "Patient", "Reason"
            }
        ));
        jScrollPane1.setViewportView(doctorTask);

        BackButton.setText("<<BACK");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        addNotes.setText("Add Notes");
        addNotes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNotesActionPerformed(evt);
            }
        });

        viewPatientHistory.setText("View Patient History");
        viewPatientHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewPatientHistoryActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Calibri", 2, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Doctor Tasks");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(64, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(addNotes)
                        .addGap(68, 68, 68)
                        .addComponent(viewPatientHistory))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(BackButton)
                        .addGap(116, 116, 116)
                        .addComponent(jLabel7)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(BackButton)
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addNotes)
                    .addComponent(viewPatientHistory))
                .addContainerGap(282, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        // TODO add your handling code here:
        layoutContainer.remove(this);
        CardLayout layout = (CardLayout) layoutContainer.getLayout();
        layout.previous(layoutContainer);
    }//GEN-LAST:event_BackButtonActionPerformed

    private void addNotesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNotesActionPerformed
        // TODO add your handling code here:
        int rowIndex = doctorTask.getSelectedRow();
        if (rowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row for selecting a doctor", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        DoctorAddNotesJPanel danjp = new DoctorAddNotesJPanel(layoutContainer, doctorTask.getValueAt(rowIndex,0).toString(), doctorTask.getValueAt(rowIndex,1).toString(), doctorTask.getValueAt(rowIndex,2).toString());
        layoutContainer.add("DoctorAddNotesJPanel", danjp);
        CardLayout layout = (CardLayout) layoutContainer.getLayout();
        layout.next(layoutContainer);
    }//GEN-LAST:event_addNotesActionPerformed

    private void viewPatientHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewPatientHistoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_viewPatientHistoryActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JButton addNotes;
    private javax.swing.JTable doctorTask;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton viewPatientHistory;
    // End of variables declaration//GEN-END:variables
}
